runApp()
runApp()
runApp()
runApp()
data.frame(fin,fund)
View(data.frame(fin,fund))
match(fin$Name, fund$Name)
View(data.frame(fin,fund[c(-1,-2),]))
View(data.frame(fin,fund[,c(-1,-2)]))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/GitHub/projekt-napredni-pristopi-R/projekt.R')
shiny::runApp()
shiny::runApp()
install.packages("DT")
runApp()
runApp()
runApp()
runApp()
?tags$style
?list(tags$style)
??style
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
source('G:/VID/fmf/napredni pristopi v R/projekt/projekt.R')
runApp()
runApp()
runApp()
source('projekt.R', encoding='UTF-8')
runApp()
source('G:/VID/fmf/napredni pristopi v R/projekt/projekt.R')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/.active-rstudio-document')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
fin <- data.frame(fin,fund[,c(-1,-2)])
head(fin)
View(fund)
View(fin)
source('~/GitHub/projekt-napredni-pristopi-R/projekt.R')
View(fin)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/.active-rstudio-document')
shinyApp(ui = ui, server = server)
source('~/.active-rstudio-document')
runApp('~/FMF/napredni pristopi v programu R/Lect2ShinyApps/exercises/exercise1.9optional')
runApp()
runApp()
runApp('~/FMF/napredni pristopi v programu R/Lect2ShinyApps/exercises/exercise1.9optional')
runApp('~/FMF/napredni pristopi v programu R/Lect2ShinyApps/exercises/exercise1.9optional')
runApp('~/FMF/napredni pristopi v programu R/Lect2ShinyApps/exercises/exercise1.9optional')
source('~/.active-rstudio-document')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/.active-rstudio-document')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/.active-rstudio-document')
runApp()
runApp()
runApp()
runApp()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
if (is.null(x))
ui <- fluidPage(
p("The first checkbox group controls the second"),
checkboxGroupInput("inCheckboxGroup", "Input checkbox",
c("Item A", "Item B", "Item C")),
checkboxGroupInput("inCheckboxGroup2", "Input checkbox 2",
c("Item A", "Item B", "Item C"))
)
server <- function(input, output, session) {
observe({
x <- input$inCheckboxGroup
# Can use character(0) to remove all choices
if (is.null(x))
x <- character(0)
# Can also set the label and select items
updateCheckboxGroupInput(session, "inCheckboxGroup2",
label = paste("Checkboxgroup label", length(x)),
choices = x,
selected = x
)
})
}
shinyApp(ui, server)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
runApp()
runApp()
source('~/.active-rstudio-document')
shinyApp(
shinyUI(
fluidPage(
dataTableOutput('PM_output')
)
),
shinyServer(function(input, output, session) {
require(DT)
dat <- read.table(text="Col1     Col2                  Col3
Google   '5 lines description'   www.google.com
Yahoo    '5 lines description'   www.yahoo.com", header=T, strings=F)
dat$Col3 <- sapply(dat$Col3, function(x)
toString(tags$a(href=paste0("http://", x), x)))
output$PM_output <- renderDataTable(expr = datatable(dat, escape=FALSE),
options = list(autoWidth = T))
})
)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
library(shiny)
library(png)
server <- shinyServer(function(input, output) {
output$image1 <- renderImage({
width<- "100%"
height<- "100%"
list(src = "www/logo.png",
contentType = "image/png",
width = width,
height = height,
)
}, deleteFile = FALSE)
output$text1 <- renderText({ "please help make the image hyperlinked"     })
})
library(shiny)
ui <- shinyUI(pageWithSidebar(
titlePanel(imageOutput("image1")),
sidebarPanel(
helpText(   a("Click Here for the Source Code on Github!",         href="https://github.com/Bohdan-Khomtchouk/Microscope",target="_blank"))
),
mainPanel(
tabsetPanel(
tabPanel("Instructions",textOutput("text1"))
))
))
source('~/.active-rstudio-document')
library(shiny)
library(png)
server <- shinyServer(function(input, output) {
output$image1 <- renderImage({
width<- "100%"
height<- "100%"
list(src = "www/logo.png",
contentType = "image/png",
width = width,
height = height,
)
}, deleteFile = FALSE)
output$text1 <- renderText({ "please help make the image hyperlinked"     })
})
library(shiny)
ui <- shinyUI(pageWithSidebar(
titlePanel(imageOutput("image1")),
sidebarPanel(
helpText(   a("Click Here for the Source Code on Github!",         href="https://github.com/Bohdan-Khomtchouk/Microscope",target="_blank"))
),
mainPanel(
tabsetPanel(
tabPanel("Instructions",textOutput("text1"))
))
))
shinyApp(ui = ui, server = server)
runApp()
shiny::fluidRow(
shinydashboard::box(title = "Intro Page", "Some description...",
shiny::actionButton(inputId='ab1', label="Learn More",
icon = icon("th"),
onclick ="window.open('http://google.com', '_blank')")
)
)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
